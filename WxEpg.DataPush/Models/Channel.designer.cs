#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace WxEpg.DataPush.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="epg")]
	public partial class ChannelDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void Insertchannel(channel instance);
    partial void Updatechannel(channel instance);
    partial void Deletechannel(channel instance);
    #endregion
		
		public ChannelDataContext() : 
				base(global::WxEpg.DataPush.Properties.Settings.Default.epgConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ChannelDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ChannelDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ChannelDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ChannelDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<channel> channel
		{
			get
			{
				return this.GetTable<channel>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.channel")]
	public partial class channel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _wname;
		
		private string _viagroup;
		
		private System.Nullable<bool> _inuse;
		
		private System.Nullable<System.DateTime> _createtime;
		
		private System.Nullable<System.DateTime> _updatetime;
		
		private string _province;
		
		private string _city;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnwnameChanging(string value);
    partial void OnwnameChanged();
    partial void OnviagroupChanging(string value);
    partial void OnviagroupChanged();
    partial void OninuseChanging(System.Nullable<bool> value);
    partial void OninuseChanged();
    partial void OncreatetimeChanging(System.Nullable<System.DateTime> value);
    partial void OncreatetimeChanged();
    partial void OnupdatetimeChanging(System.Nullable<System.DateTime> value);
    partial void OnupdatetimeChanged();
    partial void OnprovinceChanging(string value);
    partial void OnprovinceChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    #endregion
		
		public channel()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wname", DbType="VarChar(50)")]
		public string wname
		{
			get
			{
				return this._wname;
			}
			set
			{
				if ((this._wname != value))
				{
					this.OnwnameChanging(value);
					this.SendPropertyChanging();
					this._wname = value;
					this.SendPropertyChanged("wname");
					this.OnwnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_viagroup", DbType="VarChar(150)")]
		public string viagroup
		{
			get
			{
				return this._viagroup;
			}
			set
			{
				if ((this._viagroup != value))
				{
					this.OnviagroupChanging(value);
					this.SendPropertyChanging();
					this._viagroup = value;
					this.SendPropertyChanged("viagroup");
					this.OnviagroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_inuse", DbType="Bit")]
		public System.Nullable<bool> inuse
		{
			get
			{
				return this._inuse;
			}
			set
			{
				if ((this._inuse != value))
				{
					this.OninuseChanging(value);
					this.SendPropertyChanging();
					this._inuse = value;
					this.SendPropertyChanged("inuse");
					this.OninuseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createtime", DbType="DateTime")]
		public System.Nullable<System.DateTime> createtime
		{
			get
			{
				return this._createtime;
			}
			set
			{
				if ((this._createtime != value))
				{
					this.OncreatetimeChanging(value);
					this.SendPropertyChanging();
					this._createtime = value;
					this.SendPropertyChanged("createtime");
					this.OncreatetimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updatetime", DbType="DateTime")]
		public System.Nullable<System.DateTime> updatetime
		{
			get
			{
				return this._updatetime;
			}
			set
			{
				if ((this._updatetime != value))
				{
					this.OnupdatetimeChanging(value);
					this.SendPropertyChanging();
					this._updatetime = value;
					this.SendPropertyChanged("updatetime");
					this.OnupdatetimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_province", DbType="VarChar(50)")]
		public string province
		{
			get
			{
				return this._province;
			}
			set
			{
				if ((this._province != value))
				{
					this.OnprovinceChanging(value);
					this.SendPropertyChanging();
					this._province = value;
					this.SendPropertyChanged("province");
					this.OnprovinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="VarChar(50)")]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
